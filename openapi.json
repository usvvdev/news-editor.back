b'{"openapi": "3.1.0", "info": {"title": "Dev News Application", "version": "0.1.0"}, "paths": {"/api/news": {"get": {"tags": ["News API"], "summary": "Get News", "description": "- **GET `/news`**\\n\\nRetrieves all available news for the specified **PERIOD**.\\n### Parameters:\\n\\n| Parameter | Type | Description |\\n|-----------|------|-------------|\\n| is_publsied | boolean | The status of the news publication |\\n| from_date | string | The date from which the news search will be performed |\\n| to_date | string | The date starting from which the news search will be performed |", "operationId": "get_news_api_news_get", "parameters": [{"name": "is_published", "in": "query", "required": false, "schema": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Published"}}, {"name": "from_date", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "From Date"}}, {"name": "to_date", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "To Date"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/GetNewsSchema"}, "title": "Response Get News Api News Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["News API"], "summary": "Add News Item", "description": "- **POST `/news`**\\n\\nAdd new news according to the specified parameters.\\n### Parameters:\\n\\n| Parameter | Type | Description |\\n|-----------|------|-------------|\\n| title | string | The title of the specifed news |\\n| content | string | The description of the specifed news |", "operationId": "add_news_item_api_news_post", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PostNewsSchema"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccessMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/news/{id}": {"get": {"tags": ["News API"], "summary": "Get News By Id", "description": "- **GET `/news{id}`**\\n\\nRetrieves the available news by the specified **ID**\\n### Parameters:\\n\\n| Parameter | Type | Description |\\n|-----------|------|-------------|\\n| id | integer | The identifier by which the news was published |", "operationId": "get_news_by_id_api_news__id__get", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GetNewsSchema"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["News API"], "summary": "Update News By Id", "description": "- **PUT `/news{id}`**\\n\\nUpdates the specified available news set by **ID**.\\n### Parameters:\\n\\n| Parameter | Type | Description |\\n|-----------|------|-------------|\\n| id | integer | The identifier by which the news was published |\\n| content | string | The description of the specifed news |\\n| is_published | boolean | The status of the news publication |", "operationId": "update_news_by_id_api_news__id__put", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PostNewsSchema"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccessMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/auth/token": {"post": {"tags": ["User Auth"], "summary": "User Authorization", "description": "- **POST `/auth`**\\n\\nPerforms user authentication using the specified **parameters**.\\n### Parameters:\\n\\n| Parameter | Type | Description |\\n|-----------|------|-------------|\\n| username | string | Username of user. |\\n| password | string | Password for user account. |", "operationId": "user_authorization_api_auth_token_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserAuthSchema"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthUserSchema"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/auth/refresh": {"post": {"tags": ["User Auth"], "summary": "Generate New Access Token", "description": "- **POST `/auth`**\\n\\nGetting new one authentication parameters for user.\\n### Parameters:\\n\\n| Parameter | Type | Description |\\n|-----------|------|-------------|\\n| refresh_token | string | Refresh token of the authorized user. |", "operationId": "generate_new_access_token_api_auth_refresh_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRefreshSchema"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthUserSchema"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"AuthUserSchema": {"properties": {"token_type": {"type": "string", "title": "Token Type", "default": "Bearer"}, "access_token": {"type": "string", "title": "Access Token"}, "refresh_token": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Refresh Token"}}, "type": "object", "required": ["access_token"], "title": "AuthUserSchema"}, "GetNewsSchema": {"properties": {"title": {"type": "string", "title": "Title"}, "image": {"anyOf": [{"type": "string"}, {"$ref": "#/components/schemas/PhotoSource-Output"}], "title": "Image", "default": "https://i.imgur.com/WBehwoc.jpeg"}, "content": {"type": "string", "title": "Content"}, "created_at": {"type": "string", "format": "date", "title": "Created At"}, "is_published": {"type": "boolean", "title": "Is Published", "default": false}, "id": {"type": "integer", "title": "Id"}}, "type": "object", "required": ["title", "content", "id"], "title": "GetNewsSchema"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "PhotoSource-Input": {"properties": {"media_path": {"type": "string", "title": "Media Path", "default": "media/"}, "name": {"type": "string", "title": "Name"}, "src": {"title": "Src"}}, "type": "object", "required": ["name", "src"], "title": "PhotoSource"}, "PhotoSource-Output": {"properties": {"name": {"type": "string", "title": "Name"}, "src": {"title": "Src"}}, "type": "object", "required": ["name", "src"], "title": "PhotoSource"}, "PostNewsSchema": {"properties": {"title": {"type": "string", "title": "Title"}, "image": {"anyOf": [{"type": "string"}, {"$ref": "#/components/schemas/PhotoSource-Input"}], "title": "Image", "default": "https://i.imgur.com/WBehwoc.jpeg"}, "content": {"type": "string", "title": "Content"}, "created_at": {"type": "string", "format": "date", "title": "Created At"}, "is_published": {"type": "integer", "title": "Is Published", "default": true}}, "type": "object", "required": ["title", "content"], "title": "PostNewsSchema"}, "SuccessMessage": {"properties": {"message": {"type": "string", "title": "Message", "default": "OK"}}, "type": "object", "title": "SuccessMessage"}, "UserAuthSchema": {"properties": {"username": {"type": "string", "title": "Username"}, "password": {"type": "string", "title": "Password"}}, "type": "object", "required": ["username", "password"], "title": "UserAuthSchema"}, "UserRefreshSchema": {"properties": {"refresh_token": {"type": "string", "title": "Refresh Token"}}, "type": "object", "required": ["refresh_token"], "title": "UserRefreshSchema"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "/api/auth/token"}}}}}}'